@page "/organisations/create"
@layout FormLayout
@attribute [Authorize(Roles = "DataManager")]
@inject ILogHubAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject HttpClient Client

<MudContainer MaxWidth="MaxWidth.Small" Elevation="5">
    <MudText Align="Align.Left" Typo="Typo.h4">
        Create Your Organisation
    </MudText>
    <MudDivider Class="py-4"/>
    <MudForm Model="@Model"
             @ref="@_form"
             ValidationDelay="0">

        <MudGrid Spacing="2">
            <MudItem xs="2">
                <ImageUploador OnImageUpdated="@OnLogoUploaded"/>
            </MudItem>
            <MudItem xs="10">
                <MudTextField Label="Organisation Name"
                              Variant="Variant.Outlined"
                              @bind-Value="@Model.Name"
                              For="() => Model.Name"
                              Required="true"/>
            </MudItem>
            <MudItem xs="12">
                <MudTextField Label="Organisation Description"
                              Variant="Variant.Outlined"
                              @bind-Value="@Model.Description"
                              For="() => Model.Description"
                              Lines="14"/>
            </MudItem>
        </MudGrid>


        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   Class="mt-4"
                   OnClick="SubmitAsync"
                   Disabled="@(!_form.IsValid)">
            Create
        </MudButton>
    </MudForm>
</MudContainer>

@code {
    private MudForm _form = new();

    private OrganisationModel Model { get; } = new();

    private void OnLogoUploaded(string logo)
    {
        Model.Logo = logo;
    }

    private async Task SubmitAsync()
    {
        await _form.Validate();
        if (!_form.IsValid)
        {
            return;
        }
        Model.ManagerId = await AuthenticationService.GetUserIdAsync();
        await Client.PostAsJsonAsync("/api/organisations", Model);
        NavigationManager.NavigateTo("/", true);
    }

}
