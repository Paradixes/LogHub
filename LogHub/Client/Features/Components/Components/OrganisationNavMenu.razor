@inject HttpClient Client
@inject ILogHubAuthenticationService AuthenticationService

<AuthorizeView>
    <Authorized>
        @if (OrganisationModel.Id == Guid.Empty)
        {
            <MudNavLink Href="organisations/join" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.DomainAdd">
                Join organisation
            </MudNavLink>
        }
    </Authorized>
</AuthorizeView>
<AuthorizeView Roles="@UserRole.DataManager.ToString()">
    <Authorized>
        @if (OrganisationModel.Id == Guid.Empty)
        {
            <MudNavLink Href="organisations/create" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">
                New organisation
            </MudNavLink>
        }
        else
        {
            <MudDivider Class="my-2"/>
            <MudNavGroup Title="Organisations" Icon="@Icons.Material.Filled.Business">
                <MudNavGroup Title="@OrganisationModel.Name">
                    <MudNavLink Href="@GetUrl("department")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Apartment">
                        Department List
                    </MudNavLink>
                    <MudNavLink Href="@GetUrl("user")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">
                        User List
                    </MudNavLink>
                    <MudNavLink Href="@GetUrl("project")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Science">
                        Project List
                    </MudNavLink>
                </MudNavGroup>
            </MudNavGroup>
        }
    </Authorized>
</AuthorizeView>

@code {
    OrganisationModel OrganisationModel { get; set; } = new();

    UserAccountModel UserAccountModel { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var userId = await AuthenticationService.GetUserIdAsync();
        UserAccountModel = await Client.GetFromJsonAsync<UserAccountModel>($"api/user-accounts/{userId}") ?? new UserAccountModel();
        if (UserAccountModel.OrganisationId == Guid.Empty)
        {
            return;
        }
        OrganisationModel = await Client.GetFromJsonAsync<OrganisationModel>($"api/organisations/{UserAccountModel.OrganisationId}") ?? new OrganisationModel();
    }

    private string GetUrl(string objName)
    {
        return $"/organisations/{OrganisationModel.Id}/{objName}-list";
    }

}
