@page "/organisations/{id:guid}/department-list"
@inject HttpClient Http
@layout MainLayout
@attribute [Authorize(Roles = "DataManager,Administrator")]

@* <MudDataGrid T="DepartmentModel" MultiSelection="true" Items="@_users" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@QuickFilter" Hideable="true" RowClick="@RowClicked" SelectedItemsChanged="@SelectedItemsChanged"> *@
@*     <ToolBarContent> *@
@*         <MudText Typo="Typo.h6"> *@
@*             Departments *@
@*         </MudText> *@
@*         <MudSpacer/> *@
@*         <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Class="ml-4"> *@
@*             Add *@
@*         </MudButton> *@
@*         <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true" *@
@*                       AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"> *@
@*         </MudTextField> *@
@* *@
@*     </ToolBarContent> *@
@*     <Columns> *@
@*         <SelectColumn T="DepartmentModel"/> *@
@*         <TemplateColumn CellClass="d-flex justify-end" Sortable="false" Filterable="false"> *@
@*             <CellTemplate> *@
@*                 <MudAvatar> *@
@*                     @if (context.Item.AvatarUri is not null) *@
@*                     { *@
@*                         <MudAvatarImg Src="@context.Item.AvatarUri.ToString()"/> *@
@*                     } *@
@*                     else if (context.Item.Name.Length > 0) *@
@*                     { *@
@*                         @context.Item.Name[0] *@
@*                     } *@
@*                 </MudAvatar> *@
@*             </CellTemplate> *@
@*         </TemplateColumn> *@
@*         <PropertyColumn Property="x => x.Name" Title="Name"/> *@
@*         <PropertyColumn Property="x => x.Email" Title="Email"/> *@
@*         <PropertyColumn Property="x => x.Profession" Title="Profession"/> *@
@*         <PropertyColumn Property="x => x.Orcid" Title="ORCID"/> *@
@*     </Columns> *@
@*     <PagerContent> *@
@*         <MudDataGridPager T="DepartmentModel"/> *@
@*     </PagerContent> *@
@* </MudDataGrid> *@

@* @code { *@
@* *@
@*     [Parameter] *@
@*     public Guid? Id { get; set; } *@
@* *@
@*     private string _searchString = string.Empty; *@
@* *@
@*     private List<DepartmentModel> _users = new(); *@
@* *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         _users = await Http.GetFromJsonAsync<List<DepartmentModel>>($"api/organisations/{Id}/departments") ?? new List<DepartmentModel>(); *@
@*     } *@
@* *@
@*     private Func<DepartmentModel, bool> QuickFilter => x => *@
@*     { *@
@*         if (string.IsNullOrWhiteSpace(_searchString)) *@
@*             return true; *@
@* *@
@*         if (x.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase)) *@
@*             return true; *@
@* *@
@*         if (x.Email.Contains(_searchString, StringComparison.OrdinalIgnoreCase)) *@
@*             return true; *@
@* *@
@*         if (x.Profession.Contains(_searchString, StringComparison.OrdinalIgnoreCase)) *@
@*             return true; *@
@* *@
@*         if (x.Orcid != null && x.Orcid.Contains(_searchString, StringComparison.OrdinalIgnoreCase)) *@
@*             return true; *@
@* *@
@*         if ($"{x.Name} {x.Email} {x.Profession} {x.Orcid}".Contains(_searchString)) *@
@*             return true; *@
@* *@
@*         return false; *@
@*     }; *@
@* *@
@*     void RowClicked(DataGridRowClickEventArgs<UserAccountModel> args) { } *@
@* *@
@*     void SelectedItemsChanged(HashSet<UserAccountModel> items) { } *@
@* } *@
